---
title: "C4B simulation"
---

The question has arisen to what is the association between global C and

```{r, echo=FALSE, message=FALSE, warning=FALSE}
source("R\\prediction\\decompose_model.R")
source("R\\prediction\\c4b.R")

```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
library(tidyverse)
library(survival)
set.seed(123)

data=data.frame(matrix(rnorm(6000), ncol=3)) %>% 
  mutate(arm=factor(rep(c("trt", "control"), each=1000, times=1), ordered = F),
         out=0) %>% 
  rename("a"=X1, b=X2, error=X3)

linear_predictor <- function(data, formula, coefs) {
  # Build design matrix from formula and data
  X <- model.matrix(formula, data)
  
  # Check that lengths match
  if (length(coefs) != ncol(X)) {
    stop("Length of coefficient vector does not match number of predictors in design matrix.")
  }
  
  # Compute linear predictor
  eta <- as.vector(X %*% coefs)
  
  return(data %>% cbind(eta) %>% as.data.frame())
}

formula=out~a+arm*b+error
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
error=c(seq(from=0, to=2, by=0.25),seq(from=2.5, to=10, by=0.5),seq(from=11, to=20, by=1))/2
#weight is the proportion that is given to the homo (and 1-weight is given to the Homo)
weight=c(0.1, .25,.5,.75,.9)
c_global_lm=c()
c_benefit_lm=c()
c_global_log=c()
c_benefit_log=c()
error2=c()
weight2=c()

for(j in weight){
  for(i in error){
    
    coefs=c(0,1.2*j,1*j,1*(1-j),i,1.2*(1-j))
    data2=linear_predictor(data, formula, coefs) %>% 
      mutate(p=exp(eta)/(1+exp(eta)),
             rn=row_number()) %>% 
      mutate(res=rbinom(1,1,p), .by="rn")
    mod_lm=lm(eta~a+arm*b,data2 )
    
    x_lm=mod_lm%>% concordance()
    c_global_lm=c(c_global_lm, x_lm$concordance)
    
    dm_lm=decompose_model(mod_lm,var="arm")
    c_benefit_lm=c(c_benefit_lm,(c4b(mod_lm,data=data2, outcome = eta, var=arm, matching = "decompose",method="parametric" ))$concordance)
    
    mod_log=glm(res~a+arm*b,data2, family="binomial")
    x_log=mod_log%>% concordance()
    c_global_log=c(c_global_log, x_log$concordance)
    
    dm_log=decompose_model(mod_log,var="arm")
    c_benefit_log=c(c_benefit_log,(c4b(mod_lm,data=data2, outcome = res, var=arm, matching = "decompose",method="parametric" ))$concordance)
    
    
    error2=c(error2, i)
    weight2=c(weight2, j)
  }
}

out=cbind.data.frame(error2,weight2, c_global_lm, c_benefit_lm, c_global_log, c_benefit_log) 

```

```{r, message=FALSE, warning=FALSE, echo=FALSE, eval=FALSE}
save(out, file="data/c4bsim.RDa")

```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
load(file="data/c4bsim.RDa")

```

## Linear Model

```{r, message=FALSE, warning=FALSE}
out%>% 
  mutate(weight2=factor(weight2)) %>% 
  ggplot(aes(x=c_global_lm, y=c_benefit_lm, col=weight2))+
  geom_line()+
  lims(x=c(0.5,1),
       y=c(0.5,.8))+
  labs(x="C Global",
       y="C-for-benefit",
       col="Homo weight")+
  theme_bw()
```

## Logistic

```{r, message=FALSE, warning=FALSE}
out%>% 
  mutate(weight2=factor(weight2)) %>% 
  ggplot(aes(x=c_global_log, y=c_benefit_log, col=weight2))+
  geom_line()+
  lims(x=c(0.5,.8),
       y=c(0.5,.65))+
  labs(x="C Global",
       y="C-for-benefit",
       col="Homo weight")+
  theme_bw()
```
