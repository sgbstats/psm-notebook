---
title: "C for benefit"
bibliography: references.bib
---

In C for benefit, the matching is based on predicted benefit, but what happens when there are substantially different baseline 'hetrogeneous' risks? This is based on @klaveren2018 which used a logistic model.

Let's consider a model

$$
Y \sim X_1 + X_2 + arm * X_3 + arm * X_4 
$$

This can be rewritten as

$$
y_i= f(\beta_0 + \beta_1 x_{1i} + \beta_2 x_{2i} + \beta_3 x_{3i} + \beta_4 x_{4i} + arm_i*(\beta_a + \beta_{3a} x_{3i} + \beta_{4a} x_{4i}), ...) 
$$

where $...$ is other arguments as required. This can subsequently reduce

$$
y_i=f(\beta_0+ \beta_a arm_i+\beta_{homo,i}+\beta_{het,i}arm_i,...)
$$

$$
\beta_{homo,i}=\beta_1 x_{1i} + \beta_2 x_{2i} + \beta_3 x_{3i} + \beta_4 x_{4i}
$$

$$
\beta_{het,i}= \beta_{3a} x_{3i} + \beta_{4a} x_{4i}
$$

So in the case where $\beta_a \gg \beta_{het,i}$ and $\beta_{homo,i} \gg \beta_{het,i}$ , this reduces to essentially a homogeneous model and C-for-benefit doesn't really apply. We will further consider only when $\beta_{het,i}$ is non-negligible. This does apply to larger and more complex models but we use this model wlog. $\beta_0$ can be folded into $\beta_{homo,i}$ and $\beta_{arm}$ can be folded into $\beta_{het,i}$ as they shift the values equally for all patients.

Previous literature has generally used logistic regression with the ternary outcome (-1,0,1) corresponding to harm, no difference, and benefit respectively. In this analysis we extend the paired outcome to calculated as $actual_{trt,j}-actual_{control,j}$ where j is the $j^{th}$ matched pair. \<0 corresponds to harm and \>0 corresponds to benefit.

### Matching procedure

#### Lit review

It appears from @klaveren2018 that (assuming equal number in each group; in a case of unequal numbers extra people are removed at random), each arm is ranked on predicted treatment benefit. We take $rank(\beta_{het,i})$ in each arm and rank 1 in treatment is paired with rank 1 in control, two with two etc.

Where there is a large homogeneous/baseline effect (that is the outcome is caused in large part by factor(s) that do not interact with treatment), the means that we may end up matching patients with equal/very similar

@efthimiou2023 add that C4B can be used by matching on covariates or on the predicted benefit. In a further paper by @hoogland2024 discuss matching on covariates (via mahlinobis distance) but in high dimensional data, this yields issues. @klaveren2018 briefly mentioned using MD as a sensitivity analysis but didn't go into further detail. @smit2025 used a version called AUC-benefit although the definition was a tad ropey and didn't use C4B as they didn't like the matching.

#### Option 1: Mahalanobis distance between the het and the homo

After reducing the model down to our homo- and hetrogeneous effects, we can match the patients using Mahalanobis distance.

After matching you calculate the

```{r, warning=FALSE, message=FALSE}
library(MatchIt)
library(tidyverse)

# In this we are using simulating some effects
set.seed(124)
n <- 100
data <- data.frame(
  arm = sample(0:1, n, replace = TRUE), 
  homo = rnorm(n, mean = 50, sd = 10),
  hetro = rnorm(n, mean = 25, sd = 4)
)%>% 
  mutate(total=hetro+homo)

# Perform full matching
m.out <- matchit(arm ~ homo + hetro,
                 data = data,
                 method = "nearest",
                 ratio = 1,
                 replace = FALSE)

# Summary
# summary(m.out)

# Get matched data with subclass info
matched_data <- match.data(m.out)

# # View first few rows of matched data
# head(matched_data)

# Show who is matched together (by subclass)
matched_groups <- matched_data %>%
  select(subclass, arm, everything()) %>%
  arrange(subclass)%>% 
  mutate(arm=if_else(arm==1, "Trt", "Control"))
# View matched groups
# print(matched_groups, n = 20)


matched_groups %>%
  ggplot(aes(x = hetro, y = homo, group = subclass, colour=arm)) +
  geom_line(color = "black") +
  geom_point()+
  labs(colour="Arm")+
  theme_classic()


```

In the figure above, The simulated data shows which of the control and the treated are matched together.

A benefit of this is that the data can be shifted (e.g., folding in the intercept) and that it does not affect the match. The downside of this is that you cannot weight the data.

```{r}
matched_groups %>% 
  dplyr::select(subclass, total, arm) %>% 
  pivot_wider(names_from = arm, values_from = total) %>% 
  mutate(effect=Trt-Control) %>% 
  head()
```

When looking at the actual C4B you then run the concordance off the effect column.

#### Option 2: Excess exacerbations

-   Matching only on the rank of the heterogeneous estimate

-   We calculate the excess exacerbations based on $actual_i-\mathbb{E}(exac_i|arm_i=control)$

    -   In the case of a pt in the control arm in real life then it would be the difference between predicted and actual

    -   In the case of pt in the trt group then the excess captures the treatment effect

-   You then calculate the C4B based on the $excess\sim rank$

-   This will only work for count or linear models.
