---
title: "Random Forests"
bibliography: references.bib
---

Currently it looks like the random forest needs to have complete data and ones where there it is missing it seems to want to impute with mean impution. I really don't like this approach. @tang2017

For our big, data driven model. We would end up borrowing across studies, which probably isn't the end of the world. However, the predict function in the RF package doesn't like incomplete data.

Major question about interaction. I think that we would have add an interaction variable into the datasets but then theoretically it should only be in models when both of the arm and eos (eg) were both in the tree. 

Could we maybe build two sets of trees, one for people on ICS and one without?

```{r, echo=FALSE, message=FALSE, warning=FALSE}
load("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\data/study_data.RDa")

source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/auc.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/auc_boot.R")
```

```{r,message=FALSE, warning=FALSE}

library(tidyverse)
data=study_data$EFFECT$ad

data=data %>% dplyr::mutate_at(c("exac_bl", "fev1_bl"),~ifelse(sample(c(TRUE, FALSE), size = length(.), replace = TRUE, prob = c(0.8, 0.2)),., NA))%>% 
  mutate(interaction=eos_bl*if_else(arm_ipd=="ICS",1,0),
         rate=exac_modsev_n/trt_dur) %>% 
  drop_na(rate)
data$train=as.logical(rbinom(nrow(data),1, 0.8))

model="rate ~ arm_ipd+eos_bl+age_imp+exac_bl+sex+smoking_bl+fev1_bl+interaction"
model=as.formula(model)

library(randomForest)
rf=randomForest(formula=model, data=data %>% filter(train), na.action = na.roughfix)
varImpPlot(rf)


newdata=data %>% filter(!train)
z=predict(rf, newdata)
pred.out=data.frame(actual=newdata$exac_modsev_n/newdata$trt_dur,
                    pred=z)

head(pred.out, 20)
auc(pred.out, "actual", "pred")

```

::: {#refs}
:::
