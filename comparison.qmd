---
title: "Model Comparison"
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
load("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\data/study_data.RDa")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/submodels.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/predict_submodels.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/print_submodels.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/model_breakdown.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/auc.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/auc_boot.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/unpack.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/missingness_pattern.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/remove_missing_vars.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/model_breakdown.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/unpack.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/regression_imputation.R")
source("C:\\Users\\mbbx4sb5\\Dropbox (The University of Manchester)\\00_ICS_RECODE_Shared\\R/prediction/regression_imputation_on_the_fly.R")
```

## PSM

```{r, message=FALSE, warning=FALSE}
cols_to_na=c("fev1_bl", "smoking_bl", "eos_bl")
set.seed(2)
data1=study_data$EFFECT$ad %>%
  mutate(across(all_of(cols_to_na), ~ {
    n <- length(.x)
    na_indices <- sample(n, size = floor(0.2 * n))
    .x[na_indices] <- NA
    .x
  })) %>% 
  filter(trt_dur>0.5)

data1$train=as.logical(rbinom(nrow(data1),1, 0.8))
data=data1

model=exac_modsev_n ~ arm_ipd*eos_bl+age_imp+exac_bl+sex+smoking_bl+fev1_bl+offset(trt_dur)
unpack(model_breakdown(model))
submodels.object=submodels(data %>% filter(train), model, MASS::glm.nb,force_variables="trt_dur", contrasts=NULL, remove_model_data = c())

newdata=data %>% filter(train)
test=predict.submodels(newdata=newdata, submodels.object = submodels.object, se.fit=T,retain_lhs = T,include_mp=T, type='response')

in_sample_psm=auc(test, "exac_modsev_n", "fit")

newdata=data %>% filter(!train)
test=predict.submodels(newdata=newdata, submodels.object = submodels.object, se.fit=T,retain_lhs = T,include_mp=T, type='response')

out_sample_psm=auc(test, "exac_modsev_n", "fit")

in_sample_psm

out_sample_psm
```

## Regression Imputation

```{r, message=FALSE, warning=FALSE}

  data=data1%>% filter(train) %>% get_all_vars(model, data=.) %>% dplyr::select(-all_of(mod.lhs), -trt_dur, -arm_ipd)
  
imp_mod=regression_imp(data)

data_merge=data1%>% filter(train) %>% dplyr::select(all_of(mod.lhs), arm_ipd, trt_dur) %>% cbind.data.frame(imp_mod$data_imp)

mod=MASS::glm.nb(model, data_merge)

test=cbind.data.frame(exac_modsev_n=data_merge$exac_modsev_n,
                      fit=predict(mod, data_merge, type = "response"))

in_sample_ri=auc(test, "exac_modsev_n", "fit")

in_sample_ri

newdata=data1%>% filter(!train) %>% get_all_vars(model, data=.) %>% dplyr::select(-all_of(mod.lhs), -trt_dur, -arm_ipd)
nd2=regression_imp_on_the_fly(imp_mod, newdata)

data_merge2=data1%>% filter(!train) %>% dplyr::select(all_of(mod.lhs), arm_ipd, trt_dur) %>% cbind.data.frame(nd2)

test=cbind.data.frame(exac_modsev_n=data_merge2$exac_modsev_n,
                      fit=predict(mod, data_merge2, type = "response"))

out_sample_ri=auc(test, "exac_modsev_n", "fit")

out_sample_ri

```

## RF with RI

```{r,message=FALSE, warning=FALSE} 
ddm=study_data$EFFECT$ddm %>% dplyr::select(usubjid, paramcd, aval) %>% pivot_wider(names_from=paramcd, values_from=aval) %>% dplyr::select(-BACT)

ad=data1 %>% dplyr::select(usubjid, arm_ipd, trt_dur, age_imp, ics_bl, sex, cat_bl,fev1_bl, fev1percent_bl, fvc_bl, fev1fvc_bl, laba_bl, lama_bl, comorb_tot_bl, eos_bl, eos_pc_bl, reversibility_bl, smoking_bl, exac_bl, exac_modsev_n, train) 

model=rate~.

data2=merge(ad, ddm, by="usubjid") %>% 
  filter(train)

data_rf_ri=regression_imp(data2 %>% dplyr::select(-c(usubjid, arm_ipd, trt_dur, exac_modsev_n, train)))

data_rf_merge=data2 %>%   
  mutate(rate=exac_modsev_n/trt_dur) %>% 
  drop_na(rate)%>% 
  dplyr::select(rate, arm_ipd) %>% 
  cbind.data.frame(data_rf_ri$data_imp) %>%
  mutate(across(where(is.logical), as.integer),
         interaction=eos_bl*if_else(arm_ipd=="ICS",1,0))

library(randomForest)
rf=randomForest(formula=model, data=data_rf_merge)

test=cbind.data.frame(rate=data_rf_merge$rate,
                      fit=predict(rf, data_rf_merge))

in_sample_rf=auc(test, "rate", "fit")

in_sample_rf


newdata2=merge(ad, ddm, by="usubjid") %>% 
  filter(!train)

newdata_rf_ri=regression_imp_on_the_fly(data_rf_ri, newdata2 %>% dplyr::select(-c(usubjid, arm_ipd, trt_dur, exac_modsev_n, train)))

newdata_rf_merge=newdata2 %>%   
  mutate(rate=exac_modsev_n/trt_dur) %>% 
  drop_na(rate)%>% 
  dplyr::select(rate, arm_ipd) %>% 
  cbind.data.frame(newdata_rf_ri) %>%
  mutate(across(where(is.logical), as.integer),
         interaction=eos_bl*if_else(arm_ipd=="ICS",1,0))

z=predict(rf, newdata_rf_merge, se.fit=T)

pred.out=data.frame(actual=newdata_rf_merge$rate,
                    pred=z)

out_sample_rf=auc(pred.out, "actual", "pred")

out_sample_rf
```
